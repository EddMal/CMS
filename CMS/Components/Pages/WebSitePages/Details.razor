@page "/websites/details"
@attribute [Authorize]

@using CMS.Entities
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Detaljer</PageTitle>

<h1>Detaljer</h1>

<div>
    <h4>WebbSida</h4>
    <hr />
    @if (WebSite is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Titel</dt>
            <dd class="col-sm-10">@WebSite.Title</dd>
            <dt class="col-sm-2">Beskrivning</dt>
            <dd class="col-sm-10">@WebSite.Description</dd>
            <dt class="col-sm-2">Skapad</dt>
            <dd class="col-sm-10">@WebSite.CreationDate</dd>
            @if (WebSite.LastUpdated.HasValue)
            {
                <dt class="col-sm-2">Senast uppdaterad</dt>
                <dd class="col-sm-10">@WebSite.LastUpdated.Value</dd>
            }
            <dt class="col-sm-2">Startsida</dt>
            <dd class="col-sm-10">@landingPageTitle</dd>

            <AuthorizeView Roles="Admin">
                <dt class="col-sm-2">Användar Id</dt>
                <dd class="col-sm-10">@WebSite.UserId</dd>
            </AuthorizeView>
        </dl>

        <ConnectedWebPagesInfo WebSiteId="@WebSiteId" />

        <div class="d-flex justify-content-between">
            <a href="@("/websites")" title="Back" class="me-2">
                <i class="material-icons" style="color: green; font-size: 22px; padding-top: 5px; padding-bottom: 5px; padding-left: 5px;">arrow_circle_right</i>
            </a>
            <a href="@($"websites/edit?websiteid={WebSite.WebSiteId}")" title="Redigera" class="me-2">
                <i class="material-icons" style="color: orange; font-size: 22px;">edit_document</i>
            </a>
        </div>
    }
</div>

@code {
    WebSite? WebSite;
    private string? landingPageTitle;

    [SupplyParameterFromQuery]
    public int WebSiteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        WebSite = await context.WebSites.FirstOrDefaultAsync(m => m.WebSiteId == WebSiteId);

        if (WebSite is null)
        {
            NavigationManager.NavigateTo("notfound");
            return;
        }

        if (WebSite.LandingPage != null)
        {
            var landingPage = await context.WebPages
                .FirstOrDefaultAsync(wp => wp.WebPageId == WebSite.LandingPage);

            landingPageTitle = landingPage?.Title;
        }
        else
        {
            landingPageTitle = "Webbsiten har ingen startsida vald";
        }

        landingPageTitle = landingPageTitle ?? "<Något gick fel>";
    }
}


@* @page "/websites/details"
@attribute [Authorize]

@using CMS.Entities
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Detaljer</PageTitle>

<h1>Detaljer</h1>

<div>
    <h4>WebbSida</h4>
    <hr />
    @if (WebSite is null)
    {
    <p><em>Loading...</em></p>
    }
    else
    {
    <dl class="row">
        <dt class="col-sm-2">Titel</dt>
            <dd class="col-sm-10">@WebSite.Title</dd>
        <dt class="col-sm-2">Beskrivning</dt>
            <dd class="col-sm-10">@WebSite.Description</dd>
        <dt class="col-sm-2">Skapad</dt>
            <dd class="col-sm-10">@WebSite.CreationDate</dd>
            @if (WebSite.LastUpdated.HasValue)
        {
            <dt class="col-sm-2">Senast uppdaterad</dt>
                <dd class="col-sm-10">@WebSite.LastUpdated.Value</dd>
        }
        <dt class="col-sm-2">Startsida</dt>
        <dd class="col-sm-10">@landingPageTitle</dd>

        <AuthorizeView Roles="Admin">
            <dt class="col-sm-2">Användar Id</dt>
                <dd class="col-sm-10">@WebSite.UserId</dd>
        </AuthorizeView>
    </dl>

        <ConnectedWebPagesInfo WebSiteId="@WebSiteId" />

        <div class="d-flex justify-content-between">
            <a href="@("/websites")" title="Back" class="me-2">
                <i class="material-icons" style="color: green; font-size: 32px; padding-top: 5px; padding-bottom: 5px; padding-left: 5px;">arrow_circle_right</i>
            </a>
        </div>  
    }
</div>

@code {
    WebSite? WebSite;
    private string? landingPageTitle;

    [SupplyParameterFromQuery]
    public int WebSiteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        WebSite = await context.WebSites.FirstOrDefaultAsync(m => m.WebSiteId == WebSiteId);

        if (WebSite?.LandingPage != null)
        {
            var landingPage = await context.WebPages
                .FirstOrDefaultAsync(wp => wp.WebPageId == WebSite.LandingPage);

            landingPageTitle = landingPage?.Title;
        }
        else if (WebSite?.LandingPage is null)
        {
            var hasWebPages = await context.WebPages
                 .AnyAsync(wp => wp.WebSiteId == WebSiteId);

            if (hasWebPages)
            {
                landingPageTitle = "Webbsiten har ingen startsida vald";
            }
            else
            {
                landingPageTitle = "Webbsiten har inga webbsidor";
            }
        }

        if (WebSite is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
} *@

