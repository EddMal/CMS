@page "/webpages/delete"
@attribute [Authorize]
@using CMS.Shared
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Radera Webbsida</PageTitle>

@if (webpage is null)
{
    <p><em>Laddar...</em></p>
}
else
{
    <Breadcrumbs Crumbs="@(new List<(string, string)>
        {
            ("Hem", "/"),
            //("Websites", "/websites"),
            ("Webbsidor", $"/webpages?websiteid={webpage.WebSiteId}"),
            ("Ta bort webbsida", $"/webpages/delete?webpageid={WebPageId}")
        })" />

    <h1>Radera webbsida</h1>

    <h3>Är du säker på att du vill radera webbsidan?</h3>
    <div>
        <h4>Webbsida</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">WebSiteId</dt>
            <dd class="col-sm-10">@webpage.WebSiteId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Titel</dt>
            <dd class="col-sm-10">@webpage.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Beskrivning</dt>
            <dd class="col-sm-10">@webpage.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Besöks Url</dt>
            <dd class="col-sm-10">@webpage.VisitorUrl</dd>
        </dl>
        <EditForm method="post" Model="webpage" OnValidSubmit="DeleteWebPage" FormName="delete" Enhance>
            <button type="submit" class="btn btn-outline-danger">Radera</button> |
            <!-- 
            <a href="/webpages">Tillbaka</a>
            -->
        </EditForm>
    </div>
}


@code {
    WebPage? webpage;

    [SupplyParameterFromQuery]
    public int WebPageId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        webpage = await context.WebPages.FirstOrDefaultAsync(m => m.WebPageId == WebPageId);

        if (webpage is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteWebPage()
    {
        using var context = DbFactory.CreateDbContext();
        context.WebPages.Remove(webpage!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo($"/webpages?websiteid={webpage.WebSiteId}");
    }
}
