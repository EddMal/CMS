:root {
    --layout-background-color: @webPageBackgroundColor;
}

html, body {
    height: 100%; /* Ensure html and body take up the full viewport height */
    margin: 0; /* Remove any default margin */
    padding: 0; /* Remove any default padding */
}

body {
    background-color: @webPageBackgroundColor;
}

* {
    margin: 0; /* Remove margin from all elements */
    padding: 0; /* Remove padding from all elements */
}

.main .content {
    background-color: @webPageBackgroundColor;
    transition: background-color 0.3s ease; /* Optional: smooth color transition */
    margin: 0; /* Ensure no margin */
    padding: 0; /* Ensure no padding */
    width: 100%; /* Ensure content spans the full width */
    height: 100%; /* Ensure content spans the full height */
}

/* Optional: Reset header, navbar, and footer if necessary */
header, .navbar, footer {
    margin: 0; /* Remove margin */
    padding: 0; /* Remove padding */
}

.containerEditWebPagebuttons {
    position: absolute; /* Position the buttons absolutely within the container */
    bottom: 5%; /* Adjust to control vertical position of buttons */
    left: 20%; /* Adjust to control horizontal position (move towards the right) */
    transform: translate(-50%, 0); /* Adjust buttons horizontally */
    z-index: 10; /* Ensure buttons appear above content */
    display: flex; /* Arrange buttons side by side */
    gap: 23px; /* Space between Edit and Delete buttons */
}

.overlay-btn-edit {
    background-color: rgba(255, 255, 255, 0.9); /* Red background */
    color: black;
    border: 2px solid black;
    border-radius: 50%; /* This makes the button round */
    padding: 20px; /* Ensure equal padding for width and height */
    width: 40px; /* Set width to ensure a fixed size */
    height: 40px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}

.overlay-btn-delete {
    background-color: rgba(255, 255, 255, 0.9); /* Red background */
    color: black;
    border: 2px solid #000000;
    border-radius: 50%; /* This makes the button round */
    padding: 20px; /* Ensure equal padding for width and height */
    width: 40px; /* Set width to ensure a fixed size */
    height: 40px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}

.overlay-btn-main {
    background-color: rgba(255, 255, 255, 0.9); /* Red background */
    color: black;
    border: 2px solid #000000;
    border-radius: 50%; /* This makes the button round */
    padding: 20px; /* Ensure equal padding for width and height */
    width: 40px; /* Set width to ensure a fixed size */
    height: 40px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}

.overlay-btn-main-ghost {
    background-color: rgba(200, 200, 200, 0.9); /* Red background */
    color: white;
    border: 0px solid black;
    border-radius: 50%; /* This makes the button round */
    padding: 20px; /* Ensure equal padding for width and height */
    width: 40px; /* Set width to ensure a fixed size */
    height: 40px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}
    /* Optional: Hover effect for buttons */
    .overlay-btn-edit:hover, .overlay-btn-delete:hover, .overlay-btn-main:hover {
        background-color: lightgray;
    }

.button-container {
    display: flex;
    justify-content: flex-start; /* Align the buttons to the left */
    flex-wrap: nowrap; /* Prevent buttons from wrapping */
    gap: 4px; /* Space between buttons */
}

    .button-container button {
        flex: 0 0 auto; /* Ensure buttons do not stretch */
    }

.overlay-edit {
    position: absolute; /* Position relative to the containerEditWebPage */
    top: 260px;
    left: 50%; /* Position from the left (50% of the parent container) */
    transform: translate(-50%, -50%); /* Offset the button by half its width and height */
    z-index: 10;
    background-color: rgba(255, 255, 255, 1);
    color: black;
    border: 2px solid black; /* Blue border */
    padding: 10px 20px;
}

.btn-create {
    margin-top: 2px!important;
    padding-left: 6px!important;
    padding-right: 6px!important;
}

.icon-container {
    display: flex;
    flex-direction: column; /* Stack items vertically */
    align-items: center; /* Center the icon and text */
    margin: 2px; /* Add space between icons */
}

.icon-text {
    font-size: 0.6em; /* Adjust text size */
    text-align: center; /* Center the text */
    margin-top: 0px; /* Space between icon and text */
    background-color: white;
/*    border-color: black;
    border-width: 1px !important;
    border: solid;
    border-radius: 10%;*/
    padding: 1px;
}

.btn-warning-edit {
    left: 1px;
    position: relative;
    top: 5px;
    padding: 7px 8px !important;
}

.overlay-editwebpageinfo {
    position: absolute; /* Position relative to the viewport (screen) */
    top: 60px; /* Adjust this value as needed for how far down you want it to appear */
    left: 50%;
    transform: translateX(-50%); /* Offset the button by half its width */
    z-index: 10;
    background-color: rgba(255, 255, 255, 1);
    color: black;
    border: 2px solid black;
    padding: 10px 20px;
}

.table, .table th, .table td {
    border: none !important; /* Removes borders from the whole table */
}

    /* Optional: Remove padding to ensure tight layout */
    .table th, .table td {
        padding: 0 !important;
    }

.btn a p {
    display: none;
}

.btn a:hover p {
    display: block;
}

.create-empty-webpage {
    position: absolute;
    top: 80px;
}

.nav-edit-done-button-container {
    position: absolute; /* Position relative to nearest positioned ancestor (typically body or parent div) */
    bottom: -35px; /* Position from the top of the page */
    left: 191px; /* Position from the left of the page */
    z-index: 1000; /* Make sure it's on top of other content */
    display: flex; /* Align the items horizontally */
    align-items: center; /* Center them vertically */
    gap: 0px; /* Add space between the items */
}

/* Main button container */
.containerMainButtons {
    position: fixed; /* Fixes the container */
    top: 7%; /* Always at the top of the screen */
    left: 5%; /* Optional: Align it to the left */
    width: auto; /* Optional: Make it full width */
    z-index: 100; /* Ensure it stays above other content */
    background-color: rgba(255, 255, 255, 1); /* Optional: adds a background */
    padding: 0px; /* Padding for the container */
    border: 2px solid black;
    border-radius: 10px;
}

.btn {
    font-size: 14px; /* Smaller font */
    padding: 5px 1px; /* Smaller padding */
}

.containerEditWebPageContentLayout {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Define columns */
    grid-template-rows: auto; /* Adjust rows based on content */
    gap: 10px;
    position: relative;
}



.content-item-Layout {
    cursor: grabbing;
    position: relative;
    padding: 10px;
    /*background-color: #f4f4f4;*/
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.containerEditWebPageContentLayoutGrid {
    cursor: grabbing;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns by default */
    grid-gap: 10px;
    position: relative;
    position: relative;
    width: 100%;
    height: 100%;
    /* Ensure it accepts drops */
    /*border: 2px dashed #ccc;*/
}

@media (max-width: 1024px) {
    .containerEditWebPageContentLayoutGrid {
        grid-template-columns: repeat(8, 1fr); /* 8 columns for medium screens */
    }
}

@media (max-width: 768px) {
    .containerEditWebPageContentLayoutGrid {
        grid-template-columns: repeat(4, 1fr); /* 4 columns for small screens */
    }
}

@media (max-width: 480px) {
    .containerEditWebPageContentLayoutGrid {
        grid-template-columns: 1fr; /* Single column for very small screens */
    }
}

.content-item-layout-grid {
    /* Ensure it accepts drops */
    /*border: 2px dashed #ccc;*/
    /*will-change: transform, top, left;*/
    /*transition: all 0.3s ease;*/ /* Smooth transition */
}

    .content-item-layout-grid:Hover {
       
        cursor: grabbing;
       /* background-color: grey;*/
        /* border: solid;
        border-color: grey;*/
        cursor: grab;
    }

.dragging {
    cursor: grabbing;
    /*  
    opacity: 1 !important;
    cursor: move !important;
    opacity: 1 !important;
    border: 10px solid yellow;*/ /* Highlight the target area when dragging */
}

.content-item-layout-grid.mouse-down {
    background-color: rgba(0, 0, 0, 0.2); /* Change background color on mouse down */
    cursor: grabbing !important; /* Change cursor style */
}

.content-item-layout-grid.drag-over {
    /*border: 2px solid blue;*/ /* Highlight the target area when dragging */
    cursor: grabbing;
}

.content-item-layout-grid.drag-hover {
    opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    background-color: grey;
    cursor: grabbing;
}

.containerEditWebPageContentLayoutGridDelete {
    cursor: crosshair;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns by default */
    grid-gap: 10px;
    position: relative;
    position: relative;
    width: 100%;
    height: 100%;
    /* Ensure it accepts drops */
    /*border: 2px dashed #ccc;*/
}

@media (max-width: 1024px) {
    .containerEditWebPageContentLayoutGridDelete {
        grid-template-columns: repeat(8, 1fr); /* 8 columns for medium screens */
    }
}

@media (max-width: 768px) {
    .containerEditWebPageContentLayoutGridDelete {
        grid-template-columns: repeat(4, 1fr); /* 4 columns for small screens */
    }
}

@media (max-width: 480px) {
    .containerEditWebPageContentLayoutGridDelete {
        grid-template-columns: 1fr; /* Single column for very small screens */
    }
}

.content-item-layout-grid-delete {
    cursor: crosshair;
}


    .content-item-layout-grid-delete.drag-hover {
        cursor: not-allowed;
        background-color: red;
        border: solid;
        border-color: red;
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

    .content-item-layout-grid-delete:Hover {
        cursor: not-allowed;
        background-color: red;
        border: solid;
        border-color: red;
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

        .content-item-layout-grid-delete:hover * {
            cursor: not-allowed;
            opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
        }

.grid-edit-controls {
    margin-top: 10px;
}

    .grid-edit-controls input[type="range"] {
        width: 100%; /* Make the slider take up the full width of the container */
        margin-bottom: 5px;
    }

    .grid-edit-controls label {
        display: block;
        margin-bottom: 5px;
        font-size: 14px;
    }

.grid-edit-controls {
    margin-top: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

    .grid-edit-controls label {
        font-weight: bold;
    }

    .grid-edit-controls input {
        margin-bottom: 10px;
    }

.containerEditWebPageContentLayoutGridPreview {
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns by default */
    grid-gap: 10px;
    position: relative;
    position: relative;
    width: 100%;
    height: 100%;
    /* Ensure it accepts drops */
    /*border: 2px dashed #ccc;*/
}

@media (max-width: 1024px) {
    .containerEditWebPageContentLayoutGridPreview {
        grid-template-columns: repeat(8, 1fr); /* 8 columns for medium screens */
    }
}

@media (max-width: 768px) {
    .containerEditWebPageContentLayoutGridPreview {
        grid-template-columns: repeat(4, 1fr); /* 4 columns for small screens */
    }
}

.content-item-layout-grid-preview {
}

@media (max-width: 480px) {
    .containerEditWebPageContentLayoutGridPreview {
        grid-template-columns: 1fr; /* Single column for very small screens */
    }
}

.alertMessage {
    background-color: white;
    color: black;
    border: solid 2px black;
    border-radius: 3px;
    padding: 10px 10px;
    position: fixed; /* Use fixed to position relative to the viewport */
    top: 50%; /* Position it 50% down the viewport */
    left: 50%; /* Position it 50% from the left of the viewport */
    transform: translate(-50%, -50%); /* Adjust the element’s position by its own size */
}
