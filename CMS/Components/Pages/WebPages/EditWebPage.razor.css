:root {
    --layout-background-color: @webPageBackgroundColor;
}

html, body {
    height: 100%; /* Ensure html and body take up the full viewport height */
    margin: 0; /* Remove any default margin */
    padding: 0; /* Remove any default padding */
}

body {
    background-color: @webPageBackgroundColor;
}

* {
    margin: 0; /* Remove margin from all elements */
    padding: 0; /* Remove padding from all elements */
}

.main .content {
    background-color: @webPageBackgroundColor;
    transition: background-color 0.3s ease; /* Optional: smooth color transition */
    margin: 0; /* Ensure no margin */
    padding: 0; /* Ensure no padding */
    width: 100%; /* Ensure content spans the full width */
    height: 100%; /* Ensure content spans the full height */
}

/* Optional: Reset header, navbar, and footer if necessary */
header, .navbar, footer {
    margin: 0; /* Remove margin */
    padding: 0; /* Remove padding */
}

/*Toolbar and user info message*/

/* The container holding both toolbar and alert message */
.tools-and-infomessage {
    display: flex;
    height: auto;
    flex-direction: column; /* Stack the toolbar and alert vertically */
    left: 0; /* Align to the left */
    z-index: 100; /* Ensure toolbar stays above other content */
    position: fixed; /* Use relative positioning for placement control */
    width: auto; /* Ensure it spans the entire screen width */
    bottom: 0;
    padding: 0px; /* Padding for the alert */
}

/* Toolbar container */
.containerMainButtons {
    bottom: 0; /* Position the container at the bottom of the screen */
    left: 0; /* Align to the left */
    width: auto;
    background-color: rgba(255, 255, 255, 1); /* Optional: add a background */
    padding: 0px; /* Padding around the buttons */
    border: 0px solid black;
    border-radius: 0px;
    display: flex;
    flex-direction: row; /* Place toolbar buttons in a row */
    align-items: center; /* Center items vertically within the row */
    transition: width 0.3s ease, padding 0.3s ease; /* Smooth transition for the shrinking effect */
    z-index: 100; /* Make sure the toolbar stays above the alert */
}



/* Button container styling */
.button-container {
    display: flex;
    flex-direction: row; /* Align buttons horizontally */
    gap: 8px; /* Space between buttons */
    align-items: center; /* Center buttons vertically */
    transition: all 0.3s ease; /* Smooth transition for the container */
}

/* Icon container (individual button styling) */
.icon-container {
    display: flex;
    flex-direction: column;
    align-items: center; /* Align items to the center */
    justify-content: flex-start; /* Align items at the top */
    width: 70px; /* Default size for icons */
    text-align: center; /* Center the icon and text */
    transition: width 0.3s ease, opacity 0.3s ease; /* Smooth transitions for shrinking */
}

    /* Style icons */
    .icon-container i {
        font-size: 20px; /* Default icon size */
        transition: font-size 0.3s ease; /* Smooth transition for icon size */
    }

/* Styling for text under the icons */
.icon-text {
    font-size: 8px; /* Default font size for text */
    margin-top: 5px; /* Add space above the text */
    word-wrap: unset; /* Prevent text wrapping */
    text-align: center; /* Center the text */
    width: 100%; /* Ensure the text can wrap within the container */
    white-space: nowrap; /* Prevent text from wrapping */
    overflow: hidden; /* Hide any overflow */
    text-overflow: ellipsis; /* Show ellipsis when text overflows */
    display: block; /* Ensure text is displayed as a block element */
    transition: opacity 0.3s ease; /* Smooth transition for hiding text */
}


/* For small screens (responsive design) */
@media (max-width: 768px) {
    .icon-container {
        padding-top: 1px;
        width:29px; /* Width */
    }

        .icon-container i {
            font-size: 16px; /* Smaller icons on mobile */
        }

    .icon-text {
        font-size: 0px; /* Smaller text */
    }

    .containerMainButtons.minimized {
        width: 40px; /* Minimized size for mobile */
    }

    .button-container {
        gap: 6px; /* Smaller gap on mobile */
    }
}

/* For large screens, ensure the buttons are full-sized and in one row */
@media (min-width: 768px) {
    .icon-container {
        width: 20px; /* Width */
    }

        .icon-container i {
            font-size: 17px; /* Larger icons */
        }

    .icon-text {
        font-size: 0px; /* Larger text */
    }

    .containerMainButtons.minimized {
        width: 50px; /* Larger minimized width for large screens */
    }
}

/* Prevent buttons from stretching */
.button-container button {
    flex: 0 0 auto; /* Ensure buttons do not stretch */
}

/*End: Toolbar*/

/* Style for the alert message */
/* Alert message */
.user-info-message {
    position: relative; /* Positioned absolutely inside the container */
    height: 14px;
    width: 100%; /* Ensure it spans the full width */
    display: flex;
    flex-direction: row; /* Align the text and 'X' button horizontally */
    justify-content: flex-start; /* Align the text to the left */
    align-items: flex-start; /* Align the text and button to the top */
    background-color: #f3f3f3;
    border: 1px solid white;
    padding: 0px;
    padding-left:3px;
    margin-bottom:0px;
    border-radius: 0px;
    z-index: 100;
}

/* Alert text */
.user-info-message-text {
    font-size: 10px;
    color: #5a5959; /* Text color */
    flex-grow: 1; /* Allows the message to take up the remaining space */
    padding: 0px; /* Padding for the alert */
    justify-content: flex-start;
    margin-bottom: 1px;
}

/* Style the close button */
.cancle-info-message {
    font-size: 10px;
    padding: 0;
    margin: 0px;
    margin-bottom: 1px;
    background: transparent;
    border: none;
    color: lightgray;
    cursor: pointer;
    justify-content: flex-start; /* Align the x to the top of the container */
}


/* OLD ICON CONTAINER*/
/*.icon-container {
    display: flex;
    flex-direction: column;*/ /* Stack items vertically */
    /*align-items: center;*/ /* Center the icon and text */
    /*margin: 2px;*/ /* Add space between icons */
/*}

.icon-text {
    font-size: 0.6em;*/ /* Adjust text size */
    /*text-align: center;*/ /* Center the text */
    /*margin-top: 0px;*/ /* Space between icon and text */
    /*background-color: white;*/
    /*    border-color: black;
    border-width: 1px !important;
    border: solid;
    border-radius: 10%;*/
    /*padding: 1px;
}*/



.btn {
    font-size: 14px; /* Smaller font */
    padding: 5px 1px; /* Smaller padding */
}

.containerEditWebPagebuttons {
    position: absolute; /* Position the buttons absolutely within the container */
    bottom: 5%; /* Adjust to control vertical position of buttons */
    left: 20%; /* Adjust to control horizontal position (move towards the right) */
    transform: translate(-50%, 0); /* Adjust buttons horizontally */
    z-index: 10; /* Ensure buttons appear above content */
    display: flex; /* Arrange buttons side by side */
    gap: 23px; /* Space between Edit and Delete buttons */
}

.overlay-btn-edit {
    background-color: rgba(255, 255, 255, 0.9); /* Red background */
    color: black;
    border: 1px solid black;
    border-radius: 50%; /* This makes the button round */
    padding: 20px; /* Ensure equal padding for width and height */
    width: 40px; /* Set width to ensure a fixed size */
    height: 40px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}

.overlay-btn-delete {
    background-color: rgba(255, 255, 255, 0.9); /* Red background */
    color: black;
    border: 1px solid #000000;
    border-radius: 3%; /* This makes the button round */
    padding: 10px; /* Ensure equal padding for width and height */
    width: 30px; /* Set width to ensure a fixed size */
    height: 30px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}

.overlay-btn-main {
    background-color: rgba(255, 255, 255, 0.9); /* Red background */
    color: black;
    border: 1px solid #000000;
    border-radius: 3%; /* This makes the button round */
    padding: 10px; /* Ensure equal padding for width and height */
    width: 30px; /* Set width to ensure a fixed size */
    height: 30px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}

.overlay-btn-main-ghost {
    background-color: rgba(200, 200, 200, 0.9); /* Red background */
    color: white;
    border: 0px solid black;
    border-radius: 50%; /* This makes the button round */
    padding: 10px; /* Ensure equal padding for width and height */
    width: 23px; /* Set width to ensure a fixed size */
    height: 23px; /* Set height to ensure a fixed size */
    display: flex;
    justify-content: center; /* Center the icon horizontally */
    align-items: center; /* Center the icon vertically */
}
    /* Optional: Hover effect for buttons */
    .overlay-btn-edit:hover, .overlay-btn-delete:hover, .overlay-btn-main:hover {
        background-color: lightgray;
    }



/* Popup div with scrollbar, pops up at scrolled position*/
.overlay-edit {
    display: none; /* Hide the div initially */
    position: fixed;
    top: 100px; /* Position the div 100px from the top of the viewport */
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 1);
    color: white;
    padding: 10px;
    border-radius: 5px;
    border-block-color: darkslategrey;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    opacity: 1;
    z-index: 100;
    transition: opacity 0.3s ease;
    /* Scrollable content with always visible scrollbar */
    min-height: 40vh; /* Minimum height of the div */
    max-height: 80vh; /* Maximum height of the div */
    overflow-y: scroll; /* Always show the vertical scrollbar */
    padding-right: 20px; /* Optional: Adds space for the scrollbar */
}

    /* Hide the scrollbar arrows */
    .overlay-edit::-webkit-scrollbar-button {
        display: none; /* Hides the up/down arrows */
    }

    /* Style the scrollbar itself */
    .overlay-edit::-webkit-scrollbar {
        width: 5px; /* Set the width of the vertical scrollbar */
    }

    /* Style the scrollbar track (the background of the scrollbar) */
    .overlay-edit::-webkit-scrollbar-track {
        display: none;
        background: rgba(0, 0, 0, 0); /* Darker background for the track */
        border-radius: 10px; /* Rounded corners */
    }

    /* Style the draggable part of the scrollbar (the thumb) */
    .overlay-edit::-webkit-scrollbar-thumb {
        background-color: #888; /* Color of the draggable thumb */
        border-radius: 10px; /* Rounded corners for the thumb */
    }

@media (min-width: 768px) {
    .overlay-edit {
        display: block; /* Show the div on larger screens */
    }
}

@media (max-width: 768px) {
    .overlay-edit {
        display: block; /* Show the div on smaller screens */
    }
}

.btn-create {
    margin-top: 2px!important;
    padding-left: 6px!important;
    padding-right: 6px!important;
}

.btn-warning-edit {
    left: 1px;
    position: relative;
    top: 5px;
    padding: 7px 8px !important;
}

.overlay-editwebpageinfo {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    transition: top 0.3s ease-out;
    background-color: rgba(255, 255, 255, 1);
    color: black;
    border: 2px solid black;
    padding: 10px 20px;
}

.table, .table th, .table td {
    border: none !important; /* Removes borders from the whole table */
}

    /* Optional: Remove padding to ensure tight layout */
    .table th, .table td {
        padding: 0 !important;
    }

.btn a p {
    display: none;
}

.btn a:hover p {
    display: block;
}

.create-empty-webpage {
    position: absolute;
    top: 80px;
}

.nav-edit-done-button-container {
    position: absolute; /* Position relative to nearest positioned ancestor (typically body or parent div) */
    bottom: -35px; /* Position from the top of the page */
    left: 191px; /* Position from the left of the page */
    z-index: 1000; /* Make sure it's on top of other content */
    display: flex; /* Align the items horizontally */
    align-items: center; /* Center them vertically */
    gap: 0px; /* Add space between the items */
}

/*Layout base*/

/*.container-content-layout-grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);*/ /* Always 12 columns */
    /*grid-template-rows: auto;*/ /* Automatically adjust rows based on content */
    /*position: relative;
    width: 100vw;*/ /* Ensure it takes up the full available viewport width */
    /*max-width: 100vw;*/ /* Limit the maximum width to the viewport width */
    /*overflow: hidden;*/ /* Prevent content overflow */
/*}*/
.container-content-layout-grid {
    cursor: grabbing;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns */
    position: relative;
    width: 100vw; /* Grid takes full viewport width */
    max-width: 100vw; /* Limit the grid to viewport width */
    height: auto; /* Height adjusts based on the content */
    overflow-x: hidden; /* Prevent horizontal overflow */
    overflow-y: auto; /* Allow vertical scroll if needed */
}

@media (max-width: 1024px) {
    .container-content-layout-grid {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }
    .content-item {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 768px) {
    .container-content-layout-grid {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }
    .content-item {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 480px) {
    .container-content-layout-grid {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }
    .content-item {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
        font-size: 3vw;
    }
}

.content-item {
    user-select: none;
    position: relative;
    overflow: hidden; /* Prevent overflow */
    box-sizing: border-box; /* Ensure padding doesn't affect width */
    height: auto; /* Let the height adjust based on content */
    padding: 0; /* Remove extra padding if necessary */
    word-wrap: break-word; /* Allow long words to break and wrap onto the next line */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

    .content-item p {
        min-height: 30px; /* Minimum height for each cell */
        width: 100%; /* Ensure content fills the full width */
        max-width: 100%; /* Ensure content does not overflow */
        box-sizing: border-box; /* Ensure the width includes padding */
        word-wrap: break-word; /* Break words to prevent overflow */
        overflow-wrap: break-word; /* Fallback for some browsers */
        hyphens: auto !important; /* Hyphenation for headings */
    }

    /* If you have headings or other text elements that may need wrapping, apply this too */
    .content-item h1,
    .content-item h2,
    .content-item h3,
    .content-item h4,
    .content-item h5,
    .content-item h6 {
        word-wrap: break-word; /* Apply word wrap for headings */
        overflow-wrap: break-word; /* Fallback for headings */
        hyphens: auto !important; /* Hyphenation for headings */
    }

    /* Apply hyphenation to the links within content items */
    .content-item a {
        hyphens: auto !important; /* Enable hyphenation for links */
        word-wrap: break-word !important; /* Allow word breaks */
        overflow-wrap: break-word !important; /* Prevent overflow */
        white-space: normal !important; /* Allow line breaks */
    }

/*End: Layout base*/

/*Drag cell layout styling*/
.container-content-layout-grid-drag-cell {
    cursor: grabbing;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns */
    position: relative;
    width: 100vw; /* Grid takes full viewport width */
    max-width: 100vw; /* Limit the grid to viewport width */
    height: auto; /* Height adjusts based on the content */
    overflow-x: hidden; /* Prevent horizontal overflow */
    overflow-y: auto; /* Allow vertical scroll if needed */
}

@media (max-width: 1024px) {
    .container-content-layout-grid-drag-cell {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .container-content-layout-grid-drag-cell {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 768px) {
    .container-content-layout-grid-drag-cell {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .container-content-layout-grid-drag-cell {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 480px) {
    .container-content-layout-grid-drag-cell {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-drag-cell {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
        font-size: 3vw;
    }
}

.content-item-drag-cell {
    border: 1px dotted #ccc; /* Border for grid items */
    box-sizing: border-box; /* Include border in the element's total width and height */
    user-select: none;
    position: relative;
    overflow: hidden; /* Prevent overflow */
    box-sizing: border-box; /* Ensure padding doesn't affect width */
    height: auto; /* Let the height adjust based on content */
    padding: 0; /* Remove extra padding if necessary */
    word-wrap: break-word; /* Allow long words to break and wrap onto the next line */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

    .content-item-drag-cell p {
        min-height: 30px; /* Minimum height for each cell */
        width: 100%; /* Ensure content fills the full width */
        max-width: 100%; /* Ensure content does not overflow */
        box-sizing: border-box; /* Ensure the width includes padding */
        word-wrap: break-word; /* Break words to prevent overflow */
        overflow-wrap: break-word; /* Fallback for some browsers */
        hyphens: auto !important; /* Hyphenation for headings */
    }

    /* If you have headings or other text elements that may need wrapping, apply this too */
    .content-item-drag-cell,
    .content-item-drag-cell,
    .content-item-drag-cell,
    .content-item-drag-cell,
    .content-item-drag-cell,
    .content-item-drag-cell {
        word-wrap: break-word; /* Apply word wrap for headings */
        overflow-wrap: break-word; /* Fallback for headings */
        hyphens: auto !important; /* Hyphenation for headings */
    }

    /* Apply hyphenation to the links within content items */
        .content-item-drag-cell a {
            hyphens: auto !important; /* Enable hyphenation for links */
            word-wrap: break-word !important; /* Allow word breaks */
            overflow-wrap: break-word !important; /* Prevent overflow */
            white-space: normal !important; /* Allow line breaks */
        }

/* Ensure content-wrapper is not blocking interactions */
.content-item-drag-cell .content-wrapper {
    pointer-events: none; /* Disable all interactions within this wrapper */
}

    .content-item-drag-cell:Hover {
        user-select: none;
        cursor: grabbing;
        background-color: lightgray
        /* border: solid;
            border-color: grey;*/
        cursor: grab;
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

.dragging {
    user-select: none;
    cursor: grabbing;
}

.content-item-drag-cell.mouse-down {
    user-select: none;
    background-color: rgba(0, 0, 0, 0.2); /* Change background color on mouse down */
    cursor: grabbing !important; /* Change cursor style */
}

.content-item-drag-cell.drag-over {
    user-select: none;
    /*border: 2px solid blue;*/ /* Highlight the target area when dragging */
    opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    background-color: grey;
    cursor: grabbing;
}

.content-item-drag-cell.drag-hover {
    user-select: none;
    opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    background-color: grey;
    cursor: grabbing;
}

/*End Layout*/

/*Delete row/content layout styling*/

.container-content-layout-grid-delete {
    cursor: grabbing;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns */
    position: relative;
    width: 100vw; /* Grid takes full viewport width */
    max-width: 100vw; /* Limit the grid to viewport width */
    height: auto; /* Height adjusts based on the content */
    overflow-x: hidden; /* Prevent horizontal overflow */
    overflow-y: auto; /* Allow vertical scroll if needed */
}

@media (max-width: 1024px) {
    .container-content-layout-grid-delete {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-delete {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 768px) {
    .container-content-layout-grid-delete {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-delete {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 480px) {
    .container-content-layout-grid-delete {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-delete {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
        font-size: 3vw;
    }
}


.content-item-delete {
    cursor: crosshair;
    user-select: none;
    position: relative;
    overflow: hidden; /* Prevent overflow */
    box-sizing: border-box; /* Ensure padding doesn't affect width */
    height: auto; /* Let the height adjust based on content */
    padding: 0; /* Remove extra padding if necessary */
    word-wrap: break-word; /* Allow long words to break and wrap onto the next line */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

.content-item-delete .content-wrapper {
    pointer-events: none; /* Disable all interactions within this wrapper */
}


    .content-item-delete.drag-hover {
        cursor: crosshair;
        background-color: rgb(243, 85, 85);
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

    .content-item-delete:Hover {
        cursor: crosshair;
        background-color: rgb(243, 85, 85);
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

        .content-item-delete:hover * {
            background-color: rgb(243, 85, 85);
            cursor: crosshair;
            opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
        }

.content-item-delete p {
    min-height: 30px; /* Minimum height for each cell */
    width: 100%; /* Ensure content fills the full width */
    max-width: 100%; /* Ensure content does not overflow */
    box-sizing: border-box; /* Ensure the width includes padding */
    word-wrap: break-word; /* Break words to prevent overflow */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

/* If you have headings or other text elements that may need wrapping, apply this too */
    .content-item-delete h1,
    .content-item-delete h2,
    .content-item-delete h3,
    .content-item-delete h4,
    .content-item-delete h5,
    .content-item-delete h6 {
        word-wrap: break-word; /* Apply word wrap for headings */
        overflow-wrap: break-word; /* Fallback for headings */
        hyphens: auto !important; /* Hyphenation for headings */
    }

/* Apply hyphenation to the links within content items */
.content-item-delete a {
    hyphens: auto !important; /* Enable hyphenation for links */
    word-wrap: break-word !important; /* Allow word breaks */
    overflow-wrap: break-word !important; /* Prevent overflow */
    white-space: normal !important; /* Allow line breaks */
}
/*End: Delete row/content layout styling*/

/*Create content select layout styling:*/

.container-content-layout-grid-create {
    cursor: grabbing;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns */
    position: relative;
    width: 100vw; /* Grid takes full viewport width */
    max-width: 100vw; /* Limit the grid to viewport width */
    height: auto; /* Height adjusts based on the content */
    overflow-x: hidden; /* Prevent horizontal overflow */
    overflow-y: auto; /* Allow vertical scroll if needed */
}

@media (max-width: 1024px) {
    .container-content-layout-grid-create {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-create {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 768px) {
    .container-content-layout-grid-create {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-create {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 480px) {
    .container-content-layout-grid-create {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-create {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
        font-size: 3vw;
    }
}

.content-item-create {
    cursor: cell;
    user-select: none;
    position: relative;
    overflow: hidden; /* Prevent overflow */
    box-sizing: border-box; /* Ensure padding doesn't affect width */
    height: auto; /* Let the height adjust based on content */
    padding: 0; /* Remove extra padding if necessary */
    word-wrap: break-word; /* Allow long words to break and wrap onto the next line */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

.content-item-create p {
    min-height: 30px; /* Minimum height for each cell */
    width: 100%; /* Ensure content fills the full width */
    max-width: 100%; /* Ensure content does not overflow */
    box-sizing: border-box; /* Ensure the width includes padding */
    word-wrap: break-word; /* Break words to prevent overflow */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

/* If you have headings or other text elements that may need wrapping, apply this too */
.content-item-create h1,
.content-item-create h2,
.content-item-create h3,
.content-item-create h4,
.content-item-create h5,
.content-item-create h6 {
    word-wrap: break-word; /* Apply word wrap for headings */
    overflow-wrap: break-word; /* Fallback for headings */
    hyphens: auto !important; /* Hyphenation for headings */
}

/* Apply hyphenation to the links within content items */
.content-item-create a {
    hyphens: auto !important; /* Enable hyphenation for links */
    word-wrap: break-word !important; /* Allow word breaks */
    overflow-wrap: break-word !important; /* Prevent overflow */
    white-space: normal !important; /* Allow line breaks */
}

.content-item-create .content-wrapper {
    pointer-events: none; /* Disable all interactions within this wrapper */
}


    .content-item-create.drag-hover {
        cursor: cell;
        background-color: rgb(113, 255, 122);
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

    .content-item-create:Hover {
        cursor: cell;
        background-color: rgb(113, 255, 122);
        opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
    }

        .content-item-create:hover * {
            cursor: cell;
            background-color: rgb(113, 255, 122);
            opacity: 0.5; /* Makes all child elements inside the div semi-transparent */
        }
/*End:Create content layout styling*/


/* Preview layout styling*/
.content-item-preview {
    cursor: grabbing;
    display: grid;
    grid-template-columns: repeat(12, 1fr); /* 12 columns */
    position: relative;
    width: 100vw; /* Grid takes full viewport width */
    max-width: 100vw; /* Limit the grid to viewport width */
    height: auto; /* Height adjusts based on the content */
    overflow-x: hidden; /* Prevent horizontal overflow */
    overflow-y: auto; /* Allow vertical scroll if needed */
}

@media (max-width: 1024px) {
    .content-item-preview {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-preview {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 768px) {
    .content-item-preview {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-preview {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
    }
}

@media (max-width: 480px) {
    .content-item-preview {
        grid-template-columns: repeat(12, 1fr); /* Keep 12 columns */
    }

    .content-item-preview {
        width: 100%; /* Ensure content fills the entire cell */
        max-width: 100%; /* Prevent overflow of content */
        font-size: 3vw;
    }
}

.content-item-preview {
    user-select: none;
    position: relative;
    overflow: hidden; /* Prevent overflow */
    box-sizing: border-box; /* Ensure padding doesn't affect width */
    height: auto; /* Let the height adjust based on content */
    padding: 0; /* Remove extra padding if necessary */
    word-wrap: break-word; /* Allow long words to break and wrap onto the next line */
    overflow-wrap: break-word; /* Fallback for some browsers */
    hyphens: auto !important; /* Hyphenation for headings */
}

    .content-item-preview p {
        min-height: 30px; /* Minimum height for each cell */
        width: 100%; /* Ensure content fills the full width */
        max-width: 100%; /* Ensure content does not overflow */
        box-sizing: border-box; /* Ensure the width includes padding */
        word-wrap: break-word; /* Break words to prevent overflow */
        overflow-wrap: break-word; /* Fallback for some browsers */
        hyphens: auto !important; /* Hyphenation for headings */
    }

    /* If you have headings or other text elements that may need wrapping, apply this too */
    .content-item-preview h1,
    .content-item-preview h2,
    .content-item-preview h3,
    .content-item-preview h4,
    .content-item-preview h5,
    .content-item-preview h6 {
        word-wrap: break-word; /* Apply word wrap for headings */
        overflow-wrap: break-word; /* Fallback for headings */
        hyphens: auto !important; /* Hyphenation for headings */
    }

    /* Apply hyphenation to the links within content items */
    .content-item-preview a {
        hyphens: auto !important; /* Enable hyphenation for links */
        word-wrap: break-word !important; /* Allow word breaks */
        overflow-wrap: break-word !important; /* Prevent overflow */
        white-space: normal !important; /* Allow line breaks */
    }

    /* Ensure content-wrapper is not blocking interactions */
.content-item-preview .content-wrapper {
    pointer-events: none; /* Disable all interactions within this wrapper */
}
/*End: Preview layout styling*/

/* Column span size tools */

/* Style the container that holds the slider and the input field */
/* Ensure the parent container is positioned relatively so that the slider can be positioned absolutely */
/* Make the container a positioned element */
.grid-edit-controls {
    margin-top: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    position: absolute; /* Position it relative to the parent div */
    top: 0; /* Adjust based on where you want to position it vertically */
    left: 0; /* Adjust based on where you want to position it horizontally */
    right: 0; /* If you want it to span the full width of the parent */
    z-index: 10; /* Ensure it appears above other elements */
}

/* Style slider (input[type="range"]) */
input[type="range"].slider {
    position: absolute; /* Position the slider absolutely inside the parent container */
    top: 50%; /* Place the slider at the vertical center of the parent */
    left: 50%; /* Place it horizontally at the center */
    transform: translate(-50%, -50%); /* Offset it by half of its size to center it exactly */
    width: 100%; /* Make the slider span the entire width of the parent */
    height: 4px;
    background: #ddd;
    border-radius: 3px;
    outline: none;
    transition: background 0.3s ease;
}

    input[type="range"].slider::-webkit-slider-runnable-track {
        height: 8px;
        background: #ddd;
    }

    input[type="range"].slider::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        margin-top: -4px;
        width: 24px;
        height: 24px;
        background: #4CAF50;
        border-radius: 50%;
        cursor: pointer;
    }

/* Style the input field under the slider */
.slider-value-container {
    position: absolute; /* Position the input field absolutely inside the parent container */
    top: 65%; /* Adjust the distance from the slider */
    left: 50%; /* Center it horizontally */
    transform: translateX(-50%); /* Offset to ensure it's perfectly centered */
}

input[type="number"].slider-value {
    width: 40px; /* Width of the input field */
    height: 30px;
    text-align: left;
    font-size: 16px;
    padding: 5px;
    margin-left: 0px;
    margin-top: 10px;
    border: 1px solid black;
    border-radius: 5px;
    outline: none;
}

/* Optional: Style for when the slider is focused */
input[type="range"].slider:focus {
    background: #45a049;
}

/* Optional: Focus style for the input field */
input[type="number"].slider-value:focus {
    border-color: #45a049;
}

input[type="number"].slider-value::-webkit-outer-spin-button,
input[type="number"].slider-value::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type="number"].slider-value::-moz-appearance: textfield;

/* End: Column span size tools*/
