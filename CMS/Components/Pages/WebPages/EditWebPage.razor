

@page "/webpages/editwebpage"


@attribute [Authorize]

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using CMS.Entities
@using CMS.Data
@using CMS.Components.Pages.ContentPages
@rendermode InteractiveServer
@using BlazorComponents.HtmlTemplates
@namespace CMS.Components.Pages.WebPages
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject IGetCurrentUserService GetCurrentUserService
@implements IAsyncDisposable

 <style>
  
</style>




@* Todo: Investigate the handling of the use of components, to remove excess use/"writing"" of components*@

    <p>
         <div class="containerMainButtons">
             <div class="button-container">
        @if (PageExecution != ExecuteAction.Preview)
        {
 
          @*   <button type="button" class="btn btn-warning" @onclick="()=> PauseEditContent()"> Förhandsgranska sidan </button>
            <button type="button" class="btn btn-warning" @onclick="()=> AddContent()"> Lägg till innehåll </button>
            <button type="button" class="btn btn-success" @onclick="()=> EditPageinformation()"> Redigera sidinformation </button>
 *@
            <a class="btn overlay-btn-main" @onclick="()=> PauseEditContent()" aria-label="Förhandgranska" title="Förhandgranska">
                <i class="fa fa-pause fa-1x" aria-hidden="true"></i>
            </a>

            <a class="btn overlay-btn-main" @onclick="()=> AddContent()" aria-label="Lägg till innehåll" title="Lägg till innehåll">
                <i class="fa fa-plus-square-o fa-2x" aria-hidden="true"></i>
            </a>

            <a class="btn overlay-btn-main" @onclick="()=> EditPageinformation()" aria-label="Redigera sidinformation" title="Redigera sidinformation">
                <i class="fa fa-cog fa-2x" aria-hidden="true"></i>
            </a>
 
        }
        else
        {
            <a class="btn overlay-btn-main" @onclick="()=> ResumeEditContent()" aria-label="Fortsätt redigera" title="Fortsätt redigera">
                <i class="fa fa-play fa-1x" aria-hidden="true"></i>
            </a>

           @*  <button type="button" class="btn btn-warning" @onclick="()=> ResumeEditContent()"> Redigera innehåll </button> *@

        }
        </div>
        </div>
    </p>

@if (Contents == null)
{
    <p>Denna webbsidan har inget innehåll.</p>
}
else if (!Contents.Any())
                        {
                            <div class="containerEditWebPage" style="position: relative;">
                                <div class="content">
                                        <CascadingValue Value="WebPageId">
                                        <CreateContent />
                                    </CascadingValue>
                                </div>
                                <button type="button" class="btn btn-warning" @onclick="()=> CreateDone()"> Klar </button>
                            </div>
                        }
else
{
    <QuickGrid Class="table" Items="Contents">

            
        <TemplateColumn Context="content">
            @switch (PageExecution)
            {
                case ExecuteAction.EditPageinformation:
                {
                    <div class="containerEditWebPage" style="position: relative;">
                        <div class="content">
                            <ContentPreview ContentId="@content.ContentId" />
                        </div>
                            <div class="overlay-editwebpageinfo">
                            <CascadingValue Value="content.WebPageId">
                                <CMS.Components.Pages.WebPages.Edit />
                            </CascadingValue>
                            <button type="button" class="btn btn-warning" @onclick="()=> EditPageinformationDone()"> Avbryt </button>
                        </div>
                    </div>
                    PageExecution = ExecuteAction.Preview;
                    break;         
                }
                case ExecuteAction.EditContent:
                {
                    if (content.ContentId == ContentForEditing)
                    {
                        <div class="containerEditWebPage" style="position: relative;">
                            <div class="content">
                                <ContentPreview ContentId="@content.ContentId" />
                            </div>
                            <div class="overlay-edit">
                                <CascadingValue Value="content.ContentId">
                                    <EditContent />
                                </CascadingValue>
                                <button type="button" class="btn btn-warning" @onclick="()=> ResumeEditContent()"> Avbryt </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="content">
                            <ContentPreview ContentId="@content.ContentId" />
                            </div>
                        }

                        break;
                    }
                case ExecuteAction.CreateContent:
                    {
                       
                        <div class="containerEditWebPage" style="position: relative;">
                        <div class="content">
                            <ContentPreview ContentId="@content.ContentId" />
                        </div>
                        <div class="overlay-edit">
                            <CascadingValue Value="content.WebPageId">
                                <CreateContent />
                            </CascadingValue>
                            <button type="button" class="btn btn-warning" @onclick="()=> CreateDone()"> Klar </button>
                        </div>
                    </div>
                    PageExecution = ExecuteAction.Preview;
                    break;
                }
                case ExecuteAction.EditSelect:
                {
                    <div class="containerEditWebPage" style="position: relative;">
                        <div class="content">
                            <ContentPreview ContentId="@content.ContentId" />
                        </div>

                        
                        <div class="containerEditWebPagebuttons">
                            <div class="button-container">
                              @*   <button class="btn btn-primary overlay-btn-edit btn-primary-outline" @onclick="()=> EditContent(content)"> Redigera </button>
                                <button class="btn btn-primary overlay-btn-delete btn-primary-outline" @onclick="()=> DeleteContent(content.ContentId)"> Ta bort </button>
 *@
                                <a class="btn overlay-btn-edit" @onclick="()=> EditContent(content)" aria-label="Redigera" title="Redigera">
                                        <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                                </a>
                                <a class="btn overlay-btn-delete" @onclick="()=> DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                    <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                     break;
                }
                case ExecuteAction.Preview:
                {
                    <div class="content">
                        <ContentPreview ContentId="@content.ContentId" />
                        </div>

                        break;
                    }
                case ExecuteAction.Delete:
                    {
                        if (ContentForEditing == content.ContentId)
                        {
                            Content contentdelete = new()
                                        {
                                            ContentId = (int)ContentForEditing
                                        };
                            <div class="containerEditWebPage" style="position: relative;">
                                <div class="content">
                                    <ContentPreview ContentId="@content.ContentId" />
                                </div>
                                <div class="overlay-edit">
                                    <CascadingValue Value="@contentdelete.ContentId">
                                        <CMS.Components.Pages.ContentPages.Delete />
                                    </CascadingValue>
                                    <button type="button" class="btn btn-warning" @onclick="()=> CreateDone()"> Gå tillbaka </button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="content">
                                <ContentPreview ContentId="@content.ContentId" />
                            </div>
                        }
                        break;
                }
                case ExecuteAction.Wait:
                {
                    break;
                }
                default:          
                {
                    <div class="content">
                        <ContentPreview ContentId="@content.ContentId" />
                    </div>
                    break;
                }
            }
        </TemplateColumn>
    </QuickGrid>
}
