@layout Layout.EmptyLayout

@page "/webpages/editwebpage"


@attribute [Authorize]
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using CMS.Entities
@using CMS.Data
@using CMS.Components.Pages.ContentPages
@rendermode InteractiveServer
@using BlazorComponents.HtmlTemplates
@namespace CMS.Components.Pages.WebPages
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject IGetCurrentUserService GetCurrentUserService
@implements IAsyncDisposable




    @* Todo: Investigate the handling of the use of components, to remove excess use/"writing" of components*@
        <p>
             <div class="containerMainButtons">
                 <div class="button-container">
                @if (PageExecution != ExecuteAction.Preview)
                {
                    if (HideToolbar)
                    {
                        <div class="icon-container">
                            <a class="btn overlay-btn-main" @onclick="()=> HideTools()" aria-label="Förhandgranska" title="Förhandgranska">
                                <i class="fa fa-wrench fa-1x" aria-hidden="true"></i>
                            </a>
                            <span class="icon-text">Verktyg</span>
                        </div>
                    }
                    else
                    {
                        <div class="icon-container">
                            <a class="btn overlay-btn-main" @onclick="()=> PauseEditContent()" aria-label="Förhandgranska" title="Förhandgranska">
                                <i class="fa fa-pause fa-1x" aria-hidden="true"></i>
                            </a>
                            <span class="icon-text">Granska</span>
                        </div>

                        <div class="icon-container">
                            <a class="btn overlay-btn-main" @onclick="()=> AddContent()" aria-label="Lägg till innehåll" title="Lägg till innehåll">
                                <i class="fa fa-plus-square-o fa-2x" style="margin-top:2px;"aria-hidden="true"></i>
                            </a>
                            <span class="icon-text">Lägg till</span>
                        </div>

                        <div class="icon-container">
                            <a class="btn overlay-btn-main" @onclick="()=> EditPageinformation()" aria-label="Redigera sidinformation" title="Redigera sidinformation">
                                <i class="fa fa-cog fa-2x" aria-hidden="true"></i>
                            </a>
                            <span class="icon-text">Redigera</span>
                        </div>

                        <div class="icon-container">
                            <a class="btn overlay-btn-main" href="@($"webpages?websiteid={WebSiteId}")" aria-label="Tillbaka till webbsajt" title="Tillbaka till webbsajt">
                                <i class="fa fa-mail-reply fa-2x" aria-hidden="true"></i>
                        </a>
                            <span class="icon-text">Tillbaka</span>
                    </div>

                        <div class="icon-container">
                            <a class="btn overlay-btn-main-ghost" @onclick="()=> HideTools()" aria-label="Förhandgranska" title="Förhandgranska">
                                <i class="fa fa-snapchat-ghost fa-2x" aria-hidden="true"></i>
                            </a>
                            <span class="icon-text">Göm</span>
                        </div>

                    }
                }
                else
                {
                    <div class="icon-container">
                        <a class="btn overlay-btn-main-ghost" @onclick="()=> ResumeEditContent()" aria-label="Fortsätt redigera" title="Fortsätt redigera">
                            <i class="fa fa-play fa-1x" aria-hidden="true"></i>
                        </a>
                            <span class="icon-text">Redigera</span>
                    </div>
                }
                </div>
            </div>
        </p>

        @if (Contents == null)
        {
            <p>Denna webbsidan har inget innehåll.</p>
        }
        else if (!Contents.Any())
        { 
            <CascadingValue Value="WebPageId">
                <CreateContent />
            </CascadingValue>
            <button type="button" class="btn btn-warning" @onclick="()=> CreateDone()"> Klar </button>
        }
        else
        {
        if (layout == null || layout.LayoutCells == null || !layout.LayoutCells.Any())
            {
            foreach (var content in Contents)
            {
                    @switch (PageExecution)
                    {
                        case ExecuteAction.EditPageinformation:
                            {
                            <div class="containerEditWebPageContent" style="position: relative;">
                                <div class="content">
                                    <ContentPreview ContentId="@content.ContentId" />
                                    </div>
                                        <div class="overlay-editwebpageinfo">
                                        <CascadingValue Value="content.WebPageId">
                                            <CMS.Components.Pages.WebPages.Edit />
                                        </CascadingValue>
                                            <button type="button" class="btn btn-warning btn-warning-edit" @onclick="()=> EditPageinformationDone()"> Tillbaka </button>
                                    </div>
                                </div>
                                PageExecution = ExecuteAction.Preview;
                                break;         
                            }
                        case ExecuteAction.EditContent:
                            {
                                if (content.ContentId == ContentForEditing)
                                {
                                    @* Todo: Change this use of templateId is not good practice: *@
                                    if (content.TemplateId == 9)
                                    {
                                        <div class="containerEditWebPageContent" style="position: relative;">
                                            <div class="content">
                                                <CascadingValue Value="content.ContentId">
                                                    <EditContent />
                                                </CascadingValue>
                                            </div>
                                            <div class="nav-edit-done-button-container">
                                                <button type="button" class="btn btn-warning" @onclick="()=> ResumeEditContent()"> Tillbaka </button>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                    <div class="containerEditWebPageContent" style="position: relative;">
                                        <div class="content">
                                            <ContentPreview ContentId="@content.ContentId" />
                                        </div>
                                        <div class="overlay-edit">
                                            <CascadingValue Value="content.ContentId">
                                                <EditContent />
                                            </CascadingValue>
                                            <button type="button" class="btn btn-warning" @onclick="()=> ResumeEditContent()"> Tillbaka </button>
                                        </div>
                                    </div>                             
                                    }
                            }
                            else
                            {
                                <div class="content">
                                    <ContentPreview ContentId="@content.ContentId" />
                                    </div>
                            }
                                break;
                            }
                        case ExecuteAction.CreateContent:
                            {
                                <div class="containerEditWebPageContent" style="position: relative;">
                                    <div class="content">
                                        <ContentPreview ContentId="@content.ContentId" />
                                    </div>
                                    <div class="overlay-edit">
                                        <CascadingValue Value="content.WebPageId">
                                            <CreateContent />
                                        </CascadingValue>
                                    <button type="button" class="btn btn-warning btn-create" @onclick="()=> CreateDone()"> Klar </button>
                                    </div>
                                </div>
                                PageExecution = ExecuteAction.Preview;
                                break;
                            }
                case ExecuteAction.EditSelect:
                    {
                    if (layout == null || layout.LayoutCells == null || !layout.LayoutCells.Any())
                    {
                        // If layout doesn't exist or has no cells, show the content without layout grid
                        <div class="containerEditWebPageContent" style="position: relative;">
                            <div class="content">
                                <ContentPreview ContentId="@content.ContentId" />
                            </div>
                            <div class="containerEditWebPagebuttons">
                                <div class="button-container">
                                    <a class="btn overlay-btn-edit" @onclick="()=> EditContent(content)" aria-label="Redigera" title="Redigera">
                                        <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                                    </a>
                                    <a class="btn overlay-btn-delete" @onclick="()=> DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                        <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                                    </a>
                                </div>
                            </div>
                            </div>
                        }
                        else
                        {
                            // If layout exists, render the content in grid layout
                            var layoutCell = layout.LayoutCells.FirstOrDefault(lc => lc.ContentId == content.ContentId);

                            if (layoutCell != null)
                            {
                                <div class="containerEditWebPageContentLayoutGrid">
                                    <div class="content-item-layout-grid"
                                    draggable="true"
                                    @ondragstart="(e) => OnDragStart(e, layoutCell)"
                                    @ondragend="OnDragEndAsync"
                                    @ondragover="(e) => OnDragOver(e, layoutCell.Row, layoutCell.Column, layoutCell.ContentId)"
                                    style="grid-row: @layoutCell.Row; grid-column: @layoutCell.Column; position: relative;"
                                    data-content-id="@layoutCell.ContentId">
                                        <ContentPreview ContentId="@layoutCell.ContentId.Value" />

                                        <div class="containerEditWebPagebuttons">
                                            <div class="button-container">
                                                <a class="btn overlay-btn-edit" @onclick="() => EditContent(content)" aria-label="Redigera" title="Redigera">
                                                    <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                                                </a>
                                                <a class="btn overlay-btn-delete" @onclick="() => DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                                    <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="containerEditWebPageContent" style="position: relative;">
                                    <div class="content">
                                    <ContentPreview ContentId="@content.ContentId" />
                                </div>
                                    <div class="containerEditWebPagebuttons">
                                        <div class="button-container">
                                            <a class="btn overlay-btn-edit" @onclick="()=> EditContent(content)" aria-label="Redigera" title="Redigera">
                                                    <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                                            </a>
                                            <a class="btn overlay-btn-delete" @onclick="()=> DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                                <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                    }
                    break;
                }

                        case ExecuteAction.Preview:
                        {
                            <div class="content">
                                <ContentPreview ContentId="@content.ContentId" />
                                </div>
                                break;
                            }
                        case ExecuteAction.Delete:
                            {
                                if (ContentForEditing == content.ContentId)
                                {
                                    Content contentdelete = new()
                                    {
                                        ContentId = (int)ContentForEditing
                                    };
                                <div class="containerEditWebPageContent" style="position: relative;">
                                        <div class="content">
                                            <ContentPreview ContentId="@content.ContentId" />
                                        </div>
                                        <div class="overlay-edit">
                                            <CascadingValue Value="@contentdelete.ContentId">
                                                <CMS.Components.Pages.ContentPages.Delete />
                                            </CascadingValue>
                                            <button type="button" class="btn btn-warning" @onclick="()=> CreateDone()"> Gå tillbaka </button>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="content">
                                        <ContentPreview ContentId="@content.ContentId" />
                                    </div>
                                }
                                break;
                        }
                        case ExecuteAction.Wait:
                        {
                            break;
                        }
                        default:          
                        {
                            <div class="content">
                                <ContentPreview ContentId="@content.ContentId" />
                            </div>
                            break;
                        }
            }
        }
    }
    else
    {

        <div class="containerEditWebPageContentLayoutGrid" style="display: grid; grid-template-columns: repeat(12, 1fr); grid-gap: 10px;">
            @foreach (var cell in layout.LayoutCells)
            {
                // Find content for the cell
                var content = Contents.FirstOrDefault(l => l.ContentId == cell.ContentId);

                if (cell != null)
                {
                    <div class="content-item-layout-grid"
                         draggable="true"
                         @ondragstart="(e) => OnDragStart(e, cell)"
                         @ondragend="(e) => OnDragEndAsync(e)"
                         @ondragover="(e) => OnDragOver(e, cell.Row, cell.Column, cell.ContentId)"
                         style="grid-row: @cell.Row; grid-column: @cell.Column;
                        grid-row-end: span @cell.RowSpan;
                        grid-column-end: span @cell.ColumnSpan;
                        position: relative;"
                         data-content-id="@cell.ContentId">

                        @if (cell.ContentId != null)
                        {
                            <ContentPreview ContentId="@cell.ContentId.Value" @key="@cell.ContentId" />

                            <div class="containerEditWebPagebuttons">
                                <div class="button-container">
                                    <a class="btn overlay-btn-edit" @onclick="() => EditContent(content)" aria-label="Redigera" title="Redigera">
                                        <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                                    </a>
                                    <a class="btn overlay-btn-delete" @onclick="() => DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                        <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                                    </a>
                                </div>
                            </div>

                            <!-- Sliders for RowSpan and ColumnSpan -->
                            <div class="grid-edit-controls">
                                @* <label for="row-span-@cell.ContentId">Row Span: @cell.RowSpan</label>
                                <input type="range" id="row-span-@cell.ContentId"
                                       value="@cell.RowSpan" min="1" max="12"
                                       @oninput="(e) => UpdateRowSpan(cell, int.Parse(e.Value.ToString()))"
                                       step="1" /> *@

                                <label for="col-span-@cell.ContentId">Column Span: @cell.ColumnSpan</label>
                                <input type="range" id="col-span-@cell.ContentId"
                                       value="@cell.ColumnSpan" min="1" max="12"
                                       @oninput="(e) => UpdateColumnSpan(cell, int.Parse(e.Value.ToString()))"
                                       step="1" />
                            </div>
                        }
                        else
                        {
                            <p style="color:white;">EMPTY</p>
                        }
                    </div>
                }
            }
        </div>

        }
    }
}
}
@*  VERSION 3: rowSpan and columnSpan *@
@* <div class="containerEditWebPageContentLayoutGrid" style="display: grid; grid-template-columns: repeat(12, 1fr); grid-gap: 10px;">
    @foreach (var cell in layout.LayoutCells)
    {
        // Find content for the cell
        var content = Contents.FirstOrDefault(l => l.ContentId == cell.ContentId);

        if (cell != null)
        {
            <div class="content-item-layout-grid"
                 draggable="true"
                 @ondragstart="(e) => OnDragStart(e, cell)"
                 @ondragend="(e) => OnDragEndAsync(e)"
                 @ondragover="(e) => OnDragOver(e, cell.Row, cell.Column, cell.ContentId)"
                 style="grid-row: @cell.Row; grid-column: @cell.Column;
                        grid-row-end: span @cell.RowSpan;
                        grid-column-end: span @cell.ColumnSpan;
                        position: relative;"
                 data-content-id="@cell.ContentId">

                @if (cell.ContentId != null)
                {
                    <ContentPreview ContentId="@cell.ContentId.Value" @key="@cell.ContentId" />

                    <div class="containerEditWebPagebuttons">
                        <div class="button-container">
                            <a class="btn overlay-btn-edit" @onclick="() => EditContent(content)" aria-label="Redigera" title="Redigera">
                                <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                            </a>
                            <a class="btn overlay-btn-delete" @onclick="() => DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                            </a>
                        </div>
                    </div>
                }
                else
                {
                    <p style="color:white;">EMPTY</p>
                }
            </div>
        }
    }
</div> *@

@*  VERSION 2: works along vid version 2 (event handler at drop end)in EditWebpage.razor.cs *@
@* <div class="containerEditWebPageContentLayoutGrid" style="display: grid; grid-template-columns: repeat(12, 1fr); grid-gap: 10px;">
    @foreach (var cell in layout.LayoutCells)
    {
        // Find content for the cell
        var content = Contents.FirstOrDefault(l => l.ContentId == cell.ContentId);

        if (cell != null)
        {
            <div class="content-item-layout-grid"
                 draggable="true"
                 @ondragstart="(e) => OnDragStart(e, cell)"
                 @ondragend="(e) => OnDragEndAsync(e)"
                 @ondragover="(e) => OnDragOver(e, cell.Row, cell.Column, cell.ContentId)"
                 style="grid-row: @cell.Row; grid-column: @cell.Column; position: relative;"
                 data-content-id="@cell.ContentId">

                @if (cell.ContentId != null)
                {
                    <ContentPreview ContentId="@cell.ContentId.Value" @key="@cell.ContentId" />

                    <div class="containerEditWebPagebuttons">
                        <div class="button-container">
                            <a class="btn overlay-btn-edit" @onclick="() => EditContent(content)" aria-label="Redigera" title="Redigera">
                                <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                            </a>
                            <a class="btn overlay-btn-delete" @onclick="() => DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                            </a>
                        </div>
                    </div>
                }
                else
                {
                    <p style="color:white;">EMPTY</p>
                }
            </div>
        }
    }

</div> *@


@*  VERSION 1: works along vid version 1 (event handler at drop end)in EditWebpage.razor.cs *@
 @* @foreach (var cell in layout.LayoutCells)
        {
            // Find content for the cell
            var content = Contents.FirstOrDefault(l => l.ContentId == cell.ContentId);

            if (cell != null)
            {
                <div class="containerEditWebPageContentLayoutGrid">
                    <div class="content-item-layout-grid"
                         draggable="true"
                         @ondragstart="(e) => OnDragStart(e, cell)"
                         @ondragend="(e) => OnDragEndAsync(e)"
                         @ondragover="(e) => OnDragOver(e, cell.Row, cell.Column, cell.ContentId)"
                         style="grid-row: @cell.Row; grid-column: @cell.Column; position: relative;"
                         data-content-id="@cell.ContentId">

                        @if (cell.ContentId != null)
                        {
                            <ContentPreview ContentId="@cell.ContentId.Value" @key="@cell.ContentId" />

                            <div class="containerEditWebPagebuttons">
                                <div class="button-container">
                                    <a class="btn overlay-btn-edit" @onclick="() => EditContent(content)" aria-label="Redigera" title="Redigera">
                                        <i class="fa fa-pencil fa-2x" aria-hidden="true"></i>
                                    </a>
                                    <a class="btn overlay-btn-delete" @onclick="() => DeleteContent(content.ContentId)" aria-label="Ta bort" title="Radera">
                                        <i class="fa fa-trash-o fa-2x" aria-hidden="true"></i>
                                    </a>
                                </div>
                            </div>
                        }
                        else
                        {
                            <p style="color:white;">EMPTY</p>
                        }
                    </div>
                </div>
            } *@

<style>
    :root {
        --layout-background-color: @webPageBackgroundColor;
    }

    html, body {
        height: 100%; /* Ensure the body takes the full height of the viewport */
        margin: 0; /* Remove any default margin */
        padding: 0; /* Remove any default padding */
    }

    body {
        background-color: @webPageBackgroundColor;
    }

    .main .content {
        background-color: @webPageBackgroundColor;
        transition: background-color 0.3s ease; /* Optional: smooth color transition */
        margin: 0; /* Ensure no margin */
        padding: 0; /* Ensure no padding */
        width: 100%; /* Ensure content spans the full width */
        height: 100%; /* Ensure content spans the full height */
    }

</style>

