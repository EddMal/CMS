@page "/webpages/details"
@attribute [Authorize]
@using CMS.Shared

@using Markdig
@inject IDbContextFactory<CMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Detaljer</PageTitle>

<Breadcrumbs Crumbs="@(new List<(string, string)>
    {
        ("Hem", "/"),
       // ("Websites", "/websites"),
        ("Webbsidor", $"/webpages?websiteid={webpage?.WebSiteId}"),
        ("Detaljer", $"/webpages/details?webpageid={WebPageId}")
    })" />

<h1>Detaljer</h1>

<div>
    <h4>Webbsida</h4>
    <hr />
    @if (webpage is null)
    {
        <p><em>Laddar...</em></p>
    }
    else {
        <div style="width:100%;justify-content: center;align-content: center; text-align: center">
          
            <CustomHeader text="@webpage.Title"></CustomHeader>
        </div>
        
        <div>
            <a href="@($"/webpages/edit?webpageid={webpage.WebPageId}")">Redigera</a> |
            <a href="@($"/contents?webpageid={webpage.WebPageId}")">Innehåll</a> | <!-- Add link to Content -->
            <a href="@($"/webpages")">Tillbaka</a>
        </div>
    }
</div>

@code {
    WebPage? webpage;

    [SupplyParameterFromQuery]
    public int WebPageId { get; set; }

    [SupplyParameterFromQuery]
    public int WebSiteId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        webpage = await context.WebPages.FirstOrDefaultAsync(m => m.WebPageId == WebPageId);

        if (webpage is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
