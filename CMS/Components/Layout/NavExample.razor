@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg navbar-light bg-light" style="font-size:20px;">
    <a class="navbar-brand" style="font-size:24px;" href="/">CMS</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    Home
                </NavLink>
            </li>

            <AuthorizeView>
                <NotAuthorized>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Dropdown
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown" style="font-size: 20px;">
                            <a class="dropdown-item" href="Account/Login">log</a>
                            <a class="dropdown-item" href="Account/Register">Another action</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#">Something else here</a>
                        </div>
                    </li>
                </NotAuthorized>

                <Authorized>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="auth">
                            Auth Required
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="Websites">
                            Websites
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="webpages">
                            WebPages
                        </NavLink>
                    </li>
                </Authorized>
            </AuthorizeView>
        </ul>

        <ul class="navbar-nav">
            <AuthorizeView>
                <NotAuthorized>
                    <li class="nav-item">
                        <NavLink class="btn btn-outline-success my-2 my-sm-0" style="font-size:20px; margin-right:10px;" href="Account/Login">
                            Login
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="btn btn-outline-success my-2 my-sm-0" style="font-size:20px; margin-right:10px;" href="Account/Register">
                            Register
                        </NavLink>
                    </li>
                </NotAuthorized>
                <Authorized>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="Account/Manage">
                            @context.User.Identity?.Name
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <form action="Account/Logout" method="post" class="form-inline" style="font-size:20px; margin-right:10px;">
    <AntiforgeryToken />
    <input type="hidden" name="ReturnUrl" value="#" />
    <button type="submit" class="btn btn-outline-danger my-2 my-sm-0" style="font-size:20px; margin-right:10px; margin-left:10px;">
        Logout
    </button>
</form>
                    </li>
                </Authorized>
            </AuthorizeView>
        </ul>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    
}
